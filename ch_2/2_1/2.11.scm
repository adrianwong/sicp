(define (mul-interval x y)
  (let ((xL (lower-bound x))
        (xH (upper-bound x))
        (yL (lower-bound y))
        (yH (upper-bound y)))
    (cond ((and (>= xL 0)
                (>= xH 0)
                (>= yL 0)
                (>= yH 0))
           (make-interval (* xL yL) (* xH yH)))
          ((and (<= xL 0)
                (>= xH 0)
                (>= yL 0)
                (>= yH 0))
           (make-interval (* xL yH) (* xH yH)))
          ((and (<= xL 0)
                (<= xH 0)
                (>= yL 0)
                (>= yH 0))
           (make-interval (* xL yH) (* xH yL)))
          ((and (<= xL 0)
                (<= xH 0)
                (<= yL 0)
                (>= yH 0))
           (make-interval (* xL yH) (* xL yL)))
          ((and (<= xL 0)
                (>= xH 0)
                (<= yL 0)
                (>= yH 0))
           (make-interval (min (* xL yH) (* xH yL))
                          (max (* xL yL) (* xH yH))))
          ((and (>= xL 0)
                (>= xH 0)
                (<= yL 0)
                (>= yH 0))
           (make-interval (* xH yL) (* xH yH)))
          ((and (>= xL 0)
                (>= xH 0)
                (<= yL 0)
                (<= yH 0))
           (make-interval (* xH yL) (* xL yH)))
          ((and (<= xL 0)
                (>= xH 0)
                (<= yL 0)
                (<= yH 0))
           (make-interval (* xH yL) (* xL yL)))
          ((and (<= xL 0)
                (<= xH 0)
                (<= yL 0)
                (<= yH 0))
           (make-interval (* xH yH) (* xL yL))))))
